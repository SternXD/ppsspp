name: Build

on:
  push:
    branches:
    - master
    # For testing.
    - actions
    tags:
      - "v*.*"
    paths-ignore:
    - '*.{txt,md}'
    - 'Tools/**'
    - '.{editorconfig,gitattributes,gitignore}'
    - 'appveyor.yml'
  pull_request:
    branches:
    - master
    paths-ignore:
    - '*.{txt,md}'
    - 'Tools/**'
    - '.{editorconfig,gitattributes,gitignore}'
    - 'appveyor.yml'

env:
  BUILD_CONFIGURATION: Release

jobs:
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        platform: [x64, ARM64]

    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Build Windows
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: msbuild /m /p:TrackFileAccess=false /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform=${{ matrix.platform }} Windows/PPSSPP.sln

    - name: Package build
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: |
        mkdir ppsspp
        cp PPSSPP*.exe ppsspp/
        cp *.pdb ppsspp/
        cp Windows/*.bat ppsspp/
        cp -r assets ppsspp/assets

    - name: Package headless (non-Win32)
      if: matrix.platform != 'Win32'
      run: cp Windows/${{ matrix.platform }}/Release/*.exe ppsspp/

    - name: Package headless (Win32)
      if: matrix.platform == 'Win32'
      run: cp Windows/Release/*.exe ppsspp/

    - name: Upload build
      uses: actions/upload-artifact@v3
      with:
        name: Windows ${{ matrix.platform }} build
        path: ppsspp/

  build-uwp:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Build UWP
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: msbuild /m /p:TrackFileAccess=false /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform=x64 /p:AppxPackageSigningEnabled=false UWP/PPSSPP_UWP.sln
    - name: Upload UWP build
      uses: actions/upload-artifact@v3
      with:
       name: UWP build
       path: ppsspp/

  test-windows:
    runs-on: windows-latest
    needs: build-windows
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: false

    - name: Fetch tests
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      # Doing this to avoid ffmpeg and other large submodules.
      run: git submodule update --init pspautotests assets/lang

    - name: Download build
      uses: actions/download-artifact@v3
      with:
        name: Windows x64 build
        path: ppsspp/

    - name: Execute unit tests
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: ppsspp\\UnitTest.exe ALL

    - name: Execute headless tests
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: python test.py -g --graphics=software
